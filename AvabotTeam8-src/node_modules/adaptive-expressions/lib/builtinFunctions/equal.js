"use strict";
/**
 * @module adaptive-expressions
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const expressionType_1 = require("../expressionType");
const functionUtils_1 = require("../functionUtils");
const functionUtils_internal_1 = require("../functionUtils.internal");
const comparisonEvaluator_1 = require("./comparisonEvaluator");
/**
 * Check whether both values, expressions, or objects are equivalent.
 * Return true if both are equivalent, or return false if they're not equivalent.
 */
class Equal extends comparisonEvaluator_1.ComparisonEvaluator {
    /**
     * Initializes a new instance of the [Equal](xref:adaptive-expressions.Equal) class.
     */
    constructor() {
        super(expressionType_1.ExpressionType.Equal, functionUtils_internal_1.InternalFunctionUtils.isEqual, functionUtils_1.FunctionUtils.validateBinary);
    }
}
exports.Equal = Equal;
//# sourceMappingURL=equal.js.map