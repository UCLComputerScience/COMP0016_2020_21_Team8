{"version":3,"file":"cognitiveservices-luis-runtime.js","sources":["../node_modules/tslib/tslib.es6.js","../lib/models/index.ts","../lib/models/mappers.ts","../lib/models/predictionMappers.ts","../lib/models/parameters.ts","../lib/operations/prediction.ts","../lib/operations/index.ts","../lib/lUISRuntimeClientContext.ts","../lib/lUISRuntimeClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * An intent detected from the utterance.\n */\nexport interface IntentModel {\n  /**\n   * Name of the intent, as defined in LUIS.\n   */\n  intent?: string;\n  /**\n   * Associated prediction score for the intent (float).\n   */\n  score?: number;\n}\n\n/**\n * An entity extracted from the utterance.\n */\nexport interface EntityModel {\n  /**\n   * Name of the entity, as defined in LUIS.\n   */\n  entity: string;\n  /**\n   * Type of the entity, as defined in LUIS.\n   */\n  type: string;\n  /**\n   * The position of the first character of the matched entity within the utterance.\n   */\n  startIndex: number;\n  /**\n   * The position of the last character of the matched entity within the utterance.\n   */\n  endIndex: number;\n  /**\n   * Describes unknown properties. The value of an unknown property can be of \"any\" type.\n   */\n  [property: string]: any;\n}\n\n/**\n * Child entity in a LUIS Composite Entity.\n */\nexport interface CompositeChildModel {\n  /**\n   * Type of child entity.\n   */\n  type: string;\n  /**\n   * Value extracted by LUIS.\n   */\n  value: string;\n}\n\n/**\n * LUIS Composite Entity.\n */\nexport interface CompositeEntityModel {\n  /**\n   * Type/name of parent entity.\n   */\n  parentType: string;\n  /**\n   * Value for composite entity extracted by LUIS.\n   */\n  value: string;\n  /**\n   * Child entities.\n   */\n  children: CompositeChildModel[];\n}\n\n/**\n * Sentiment of the input utterance.\n */\nexport interface Sentiment {\n  /**\n   * The polarity of the sentiment, can be positive, neutral or negative.\n   */\n  label?: string;\n  /**\n   * Score of the sentiment, ranges from 0 (most negative) to 1 (most positive).\n   */\n  score?: number;\n}\n\n/**\n * Prediction, based on the input query, containing intent(s) and entities.\n */\nexport interface LuisResult {\n  /**\n   * The input utterance that was analyzed.\n   */\n  query?: string;\n  /**\n   * The corrected utterance (when spell checking was enabled).\n   */\n  alteredQuery?: string;\n  topScoringIntent?: IntentModel;\n  /**\n   * All the intents (and their score) that were detected from utterance.\n   */\n  intents?: IntentModel[];\n  /**\n   * The entities extracted from the utterance.\n   */\n  entities?: EntityModel[];\n  /**\n   * The composite entities extracted from the utterance.\n   */\n  compositeEntities?: CompositeEntityModel[];\n  sentimentAnalysis?: Sentiment;\n  connectedServiceResult?: LuisResult;\n}\n\n/**\n * An interface representing EntityWithScore.\n */\nexport interface EntityWithScore extends EntityModel {\n  /**\n   * Associated prediction score for the intent (float).\n   */\n  score: number;\n}\n\n/**\n * An interface representing EntityWithResolution.\n */\nexport interface EntityWithResolution extends EntityModel {\n  /**\n   * Resolution values for pre-built LUIS entities.\n   */\n  resolution: any;\n}\n\n/**\n * Error information returned by the API\n */\nexport interface APIError {\n  /**\n   * HTTP Status code\n   */\n  statusCode?: string;\n  /**\n   * Cause of the error.\n   */\n  message?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PredictionResolveOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timezone offset for the location of the request.\n   */\n  timezoneOffset?: number;\n  /**\n   * If true, return all intents instead of just the top scoring intent.\n   */\n  verbose?: boolean;\n  /**\n   * Use the staging endpoint slot.\n   */\n  staging?: boolean;\n  /**\n   * Enable spell checking.\n   */\n  spellCheck?: boolean;\n  /**\n   * The subscription key to use when enabling bing spell check\n   */\n  bingSpellCheckSubscriptionKey?: string;\n  /**\n   * Log query (default is true)\n   */\n  log?: boolean;\n}\n\n/**\n * Contains response data for the resolve operation.\n */\nexport type PredictionResolveResponse = LuisResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: LuisResult;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const IntentModel: msRest.CompositeMapper = {\n  serializedName: \"IntentModel\",\n  type: {\n    name: \"Composite\",\n    className: \"IntentModel\",\n    modelProperties: {\n      intent: {\n        serializedName: \"intent\",\n        type: {\n          name: \"String\"\n        }\n      },\n      score: {\n        serializedName: \"score\",\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EntityModel: msRest.CompositeMapper = {\n  serializedName: \"EntityModel\",\n  type: {\n    name: \"Composite\",\n    className: \"EntityModel\",\n    modelProperties: {\n      entity: {\n        required: true,\n        serializedName: \"entity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        required: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startIndex: {\n        required: true,\n        serializedName: \"startIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      endIndex: {\n        required: true,\n        serializedName: \"endIndex\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    },\n    additionalProperties: {\n      type: {\n        name: \"Object\"\n      }\n    }\n  }\n};\n\nexport const CompositeChildModel: msRest.CompositeMapper = {\n  serializedName: \"CompositeChildModel\",\n  type: {\n    name: \"Composite\",\n    className: \"CompositeChildModel\",\n    modelProperties: {\n      type: {\n        required: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompositeEntityModel: msRest.CompositeMapper = {\n  serializedName: \"CompositeEntityModel\",\n  type: {\n    name: \"Composite\",\n    className: \"CompositeEntityModel\",\n    modelProperties: {\n      parentType: {\n        required: true,\n        serializedName: \"parentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      children: {\n        required: true,\n        serializedName: \"children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CompositeChildModel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Sentiment: msRest.CompositeMapper = {\n  serializedName: \"Sentiment\",\n  type: {\n    name: \"Composite\",\n    className: \"Sentiment\",\n    modelProperties: {\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      score: {\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LuisResult: msRest.CompositeMapper = {\n  serializedName: \"LuisResult\",\n  type: {\n    name: \"Composite\",\n    className: \"LuisResult\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      alteredQuery: {\n        serializedName: \"alteredQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      topScoringIntent: {\n        serializedName: \"topScoringIntent\",\n        type: {\n          name: \"Composite\",\n          className: \"IntentModel\"\n        }\n      },\n      intents: {\n        serializedName: \"intents\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IntentModel\"\n            }\n          }\n        }\n      },\n      entities: {\n        serializedName: \"entities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EntityModel\",\n              additionalProperties: {\n                type: {\n                  name: \"Object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      compositeEntities: {\n        serializedName: \"compositeEntities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CompositeEntityModel\"\n            }\n          }\n        }\n      },\n      sentimentAnalysis: {\n        serializedName: \"sentimentAnalysis\",\n        type: {\n          name: \"Composite\",\n          className: \"Sentiment\"\n        }\n      },\n      connectedServiceResult: {\n        serializedName: \"connectedServiceResult\",\n        type: {\n          name: \"Composite\",\n          className: \"LuisResult\"\n        }\n      }\n    }\n  }\n};\n\nexport const EntityWithScore: msRest.CompositeMapper = {\n  serializedName: \"EntityWithScore\",\n  type: {\n    name: \"Composite\",\n    className: \"EntityWithScore\",\n    modelProperties: {\n      ...EntityModel.type.modelProperties,\n      score: {\n        required: true,\n        serializedName: \"score\",\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    },\n    additionalProperties: EntityModel.type.additionalProperties\n  }\n};\n\nexport const EntityWithResolution: msRest.CompositeMapper = {\n  serializedName: \"EntityWithResolution\",\n  type: {\n    name: \"Composite\",\n    className: \"EntityWithResolution\",\n    modelProperties: {\n      ...EntityModel.type.modelProperties,\n      resolution: {\n        required: true,\n        serializedName: \"resolution\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    },\n    additionalProperties: EntityModel.type.additionalProperties\n  }\n};\n\nexport const APIError: msRest.CompositeMapper = {\n  serializedName: \"APIError\",\n  type: {\n    name: \"Composite\",\n    className: \"APIError\",\n    modelProperties: {\n      statusCode: {\n        serializedName: \"statusCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  CompositeChildModel,\n  CompositeEntityModel,\n  EntityModel,\n  EntityWithResolution,\n  EntityWithScore,\n  IntentModel,\n  LuisResult,\n  Sentiment\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const appId: msRest.OperationURLParameter = {\n  parameterPath: \"appId\",\n  mapper: {\n    required: true,\n    serializedName: \"appId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const bingSpellCheckSubscriptionKey: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"bingSpellCheckSubscriptionKey\"\n  ],\n  mapper: {\n    serializedName: \"bing-spell-check-subscription-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const log: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"log\"\n  ],\n  mapper: {\n    serializedName: \"log\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const spellCheck: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"spellCheck\"\n  ],\n  mapper: {\n    serializedName: \"spellCheck\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const staging: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"staging\"\n  ],\n  mapper: {\n    serializedName: \"staging\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const timezoneOffset: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timezoneOffset\"\n  ],\n  mapper: {\n    serializedName: \"timezoneOffset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const verbose: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"verbose\"\n  ],\n  mapper: {\n    serializedName: \"verbose\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/predictionMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { LUISRuntimeClientContext } from \"../lUISRuntimeClientContext\";\n\n/** Class representing a Prediction. */\nexport class Prediction {\n  private readonly client: LUISRuntimeClientContext;\n\n  /**\n   * Create a Prediction.\n   * @param {LUISRuntimeClientContext} client Reference to the service client.\n   */\n  constructor(client: LUISRuntimeClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets predictions for a given utterance, in the form of intents and entities. The current maximum\n   * query size is 500 characters.\n   * @param appId The LUIS application ID (Guid).\n   * @param query The utterance to predict.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PredictionResolveResponse>\n   */\n  resolve(appId: string, query: string, options?: Models.PredictionResolveOptionalParams): Promise<Models.PredictionResolveResponse>;\n  /**\n   * @param appId The LUIS application ID (Guid).\n   * @param query The utterance to predict.\n   * @param callback The callback\n   */\n  resolve(appId: string, query: string, callback: msRest.ServiceCallback<Models.LuisResult>): void;\n  /**\n   * @param appId The LUIS application ID (Guid).\n   * @param query The utterance to predict.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  resolve(appId: string, query: string, options: Models.PredictionResolveOptionalParams, callback: msRest.ServiceCallback<Models.LuisResult>): void;\n  resolve(appId: string, query: string, options?: Models.PredictionResolveOptionalParams | msRest.ServiceCallback<Models.LuisResult>, callback?: msRest.ServiceCallback<Models.LuisResult>): Promise<Models.PredictionResolveResponse> {\n    return this.client.sendOperationRequest(\n      {\n        appId,\n        query,\n        options\n      },\n      resolveOperationSpec,\n      callback) as Promise<Models.PredictionResolveResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst resolveOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"apps/{appId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.appId\n  ],\n  queryParameters: [\n    Parameters.timezoneOffset,\n    Parameters.verbose,\n    Parameters.staging,\n    Parameters.spellCheck,\n    Parameters.bingSpellCheckSubscriptionKey,\n    Parameters.log\n  ],\n  requestBody: {\n    parameterPath: \"query\",\n    mapper: {\n      required: true,\n      serializedName: \"query\",\n      constraints: {\n        MaxLength: 500\n      },\n      type: {\n        name: \"String\"\n      }\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.LuisResult\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nexport * from \"./prediction\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-luis-runtime\";\nconst packageVersion = \"2.0.0\";\n\nexport class LUISRuntimeClientContext extends msRest.ServiceClient {\n  endpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the LUISRuntimeClientContext class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{Endpoint}/luis/v2.0\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.endpoint = endpoint;\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { LUISRuntimeClientContext } from \"./lUISRuntimeClientContext\";\n\nclass LUISRuntimeClient extends LUISRuntimeClientContext {\n  // Operation groups\n  prediction: operations.Prediction;\n\n  /**\n   * Initializes a new instance of the LUISRuntimeClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, endpoint, options);\n    this.prediction = new operations.Prediction(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  LUISRuntimeClient,\n  LUISRuntimeClientContext,\n  Models as LUISRuntimeModels,\n  Mappers as LUISRuntimeMappers\n};\nexport * from \"./operations\";\n"],"names":["appId","msRest.Serializer","Parameters.endpoint","Parameters.appId","Parameters.timezoneOffset","Parameters.verbose","Parameters.staging","Parameters.spellCheck","Parameters.bingSpellCheckSubscriptionKey","Parameters.log","Mappers.LuisResult","Mappers.APIError","tslib_1.__extends","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.Prediction"],"mappings":"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"}