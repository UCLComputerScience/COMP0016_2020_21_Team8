function cov_1qarz5kalb(){var path="/Users/doudou/COMP0016_2020_21_Team8/AvabotTeam8-src/dialogs/answerDialog.js";var hash="d11277c4e8b51a684b0f53a86f7c1dff826d60c9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/doudou/COMP0016_2020_21_Team8/AvabotTeam8-src/dialogs/answerDialog.js",statementMap:{"0":{start:{line:4,column:57},end:{line:4,column:86}},"1":{start:{line:5,column:21},end:{line:5,column:45}},"2":{start:{line:6,column:39},end:{line:6,column:60}},"3":{start:{line:8,column:22},end:{line:8,column:37}},"4":{start:{line:9,column:25},end:{line:9,column:43}},"5":{start:{line:10,column:20},end:{line:10,column:33}},"6":{start:{line:14,column:8},end:{line:14,column:29}},"7":{start:{line:16,column:12},end:{line:20,column:15}},"8":{start:{line:25,column:8},end:{line:25,column:52}},"9":{start:{line:26,column:8},end:{line:29,column:12}},"10":{start:{line:31,column:8},end:{line:31,column:48}},"11":{start:{line:35,column:20},end:{line:35,column:128}},"12":{start:{line:36,column:30},end:{line:36,column:86}},"13":{start:{line:39,column:8},end:{line:39,column:68}},"14":{start:{line:43,column:8},end:{line:43,column:41}},"15":{start:{line:44,column:8},end:{line:59,column:9}},"16":{start:{line:45,column:31},end:{line:45,column:82}},"17":{start:{line:46,column:22},end:{line:46,column:24}},"18":{start:{line:48,column:12},end:{line:54,column:13}},"19":{start:{line:49,column:16},end:{line:49,column:43}},"20":{start:{line:53,column:16},end:{line:53,column:57}},"21":{start:{line:57,column:12},end:{line:57,column:97}},"22":{start:{line:58,column:12},end:{line:58,column:49}},"23":{start:{line:60,column:8},end:{line:60,column:90}},"24":{start:{line:64,column:0},end:{line:64,column:43}},"25":{start:{line:65,column:0},end:{line:65,column:45}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:18},end:{line:32,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:33},end:{line:40,column:5}},line:34},"2":{name:"(anonymous_2)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:34},end:{line:61,column:5}},line:42}},branchMap:{"0":{loc:{start:{line:35,column:20},end:{line:35,column:128}},type:"cond-expr",locations:[{start:{line:35,column:53},end:{line:35,column:83}},{start:{line:35,column:86},end:{line:35,column:128}}],line:35},"1":{loc:{start:{line:48,column:12},end:{line:54,column:13}},type:"if",locations:[{start:{line:48,column:12},end:{line:54,column:13}},{start:{line:48,column:12},end:{line:54,column:13}}],line:48}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d11277c4e8b51a684b0f53a86f7c1dff826d60c9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1qarz5kalb=function(){return actualCoverage;};}return actualCoverage;}cov_1qarz5kalb();// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
const{ComponentDialog,TextPrompt,WaterfallDialog}=(cov_1qarz5kalb().s[0]++,require('botbuilder-dialogs'));const{QnAMaker}=(cov_1qarz5kalb().s[1]++,require('botbuilder-ai'));const{MessageFactory,InputHints}=(cov_1qarz5kalb().s[2]++,require('botbuilder'));const ANSWER_DIALOG=(cov_1qarz5kalb().s[3]++,'ANSWER_DIALOG');const WATERFALL_DIALOG=(cov_1qarz5kalb().s[4]++,'WATERFALL_DIALOG');const TEXT_PROMPT=(cov_1qarz5kalb().s[5]++,'TEXT_PROMPT');class AnswerDialog extends ComponentDialog{constructor(){cov_1qarz5kalb().f[0]++;cov_1qarz5kalb().s[6]++;super(ANSWER_DIALOG);//try {
cov_1qarz5kalb().s[7]++;this.qnaMaker=new QnAMaker({knowledgeBaseId:process.env.QnAKnowledgebaseId,endpointKey:process.env.QnAEndpointKey,host:process.env.QnAEndpointHostName});// } catch (err) {
//     console.warn(`QnAMaker Exception: ${err} Check your QnAMaker configuration in .env`);
// }
cov_1qarz5kalb().s[8]++;this.addDialog(new TextPrompt(TEXT_PROMPT));cov_1qarz5kalb().s[9]++;this.addDialog(new WaterfallDialog(WATERFALL_DIALOG,[this.beginStep.bind(this),this.answerStep.bind(this)]));cov_1qarz5kalb().s[10]++;this.initialDialogId=WATERFALL_DIALOG;}async beginStep(stepContext){cov_1qarz5kalb().f[1]++;const msg=(cov_1qarz5kalb().s[11]++,stepContext.options.restartMsg?(cov_1qarz5kalb().b[0][0]++,stepContext.options.restartMsg):(cov_1qarz5kalb().b[0][1]++,'Feel free to ask any questions you have.'));const promptOptions=(cov_1qarz5kalb().s[12]++,MessageFactory.text(msg,msg,InputHints.ExpectingInput));// Ask the user to enter their name.
cov_1qarz5kalb().s[13]++;return await stepContext.prompt(TEXT_PROMPT,promptOptions);}async answerStep(stepContext){cov_1qarz5kalb().f[2]++;cov_1qarz5kalb().s[14]++;console.log('Calling QnA Maker');cov_1qarz5kalb().s[15]++;try{const qnaResults=(cov_1qarz5kalb().s[16]++,await this.qnaMaker.getAnswers(stepContext.context));var msg=(cov_1qarz5kalb().s[17]++,'');// If an answer was received from QnA Maker, send the answer back to the user.
cov_1qarz5kalb().s[18]++;if(qnaResults[0]){cov_1qarz5kalb().b[1][0]++;cov_1qarz5kalb().s[19]++;msg=qnaResults[0].answer;// If no answers were returned from QnA Maker, reply with help.
}else{cov_1qarz5kalb().b[1][1]++;cov_1qarz5kalb().s[20]++;msg='No QnA Maker answers were found.';}}catch(error){cov_1qarz5kalb().s[21]++;await stepContext.context.sendActivity('Sorry, QnA maker is currently unavailable.');cov_1qarz5kalb().s[22]++;return await stepContext.endDialog();}cov_1qarz5kalb().s[23]++;return await stepContext.replaceDialog(this.initialDialogId,{restartMsg:msg});}}cov_1qarz5kalb().s[24]++;module.exports.AnswerDialog=AnswerDialog;cov_1qarz5kalb().s[25]++;module.exports.ANSWER_DIALOG=ANSWER_DIALOG;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuc3dlckRpYWxvZy5qcyJdLCJuYW1lcyI6WyJDb21wb25lbnREaWFsb2ciLCJUZXh0UHJvbXB0IiwiV2F0ZXJmYWxsRGlhbG9nIiwicmVxdWlyZSIsIlFuQU1ha2VyIiwiTWVzc2FnZUZhY3RvcnkiLCJJbnB1dEhpbnRzIiwiQU5TV0VSX0RJQUxPRyIsIldBVEVSRkFMTF9ESUFMT0ciLCJURVhUX1BST01QVCIsIkFuc3dlckRpYWxvZyIsImNvbnN0cnVjdG9yIiwicW5hTWFrZXIiLCJrbm93bGVkZ2VCYXNlSWQiLCJwcm9jZXNzIiwiZW52IiwiUW5BS25vd2xlZGdlYmFzZUlkIiwiZW5kcG9pbnRLZXkiLCJRbkFFbmRwb2ludEtleSIsImhvc3QiLCJRbkFFbmRwb2ludEhvc3ROYW1lIiwiYWRkRGlhbG9nIiwiYmVnaW5TdGVwIiwiYmluZCIsImFuc3dlclN0ZXAiLCJpbml0aWFsRGlhbG9nSWQiLCJzdGVwQ29udGV4dCIsIm1zZyIsIm9wdGlvbnMiLCJyZXN0YXJ0TXNnIiwicHJvbXB0T3B0aW9ucyIsInRleHQiLCJFeHBlY3RpbmdJbnB1dCIsInByb21wdCIsImNvbnNvbGUiLCJsb2ciLCJxbmFSZXN1bHRzIiwiZ2V0QW5zd2VycyIsImNvbnRleHQiLCJhbnN3ZXIiLCJlcnJvciIsInNlbmRBY3Rpdml0eSIsImVuZERpYWxvZyIsInJlcGxhY2VEaWFsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoib2tHQWVZOzJGQWZaO0FBQ0E7QUFFQSxLQUFNLENBQUVBLGVBQUYsQ0FBbUJDLFVBQW5CLENBQStCQyxlQUEvQiwyQkFBbURDLE9BQU8sQ0FBQyxvQkFBRCxDQUExRCxDQUFOLENBQ0EsS0FBTSxDQUFFQyxRQUFGLDJCQUFlRCxPQUFPLENBQUMsZUFBRCxDQUF0QixDQUFOLENBQ0EsS0FBTSxDQUFFRSxjQUFGLENBQWtCQyxVQUFsQiwyQkFBaUNILE9BQU8sQ0FBQyxZQUFELENBQXhDLENBQU4sQ0FFQSxLQUFNSSxDQUFBQSxhQUFhLDBC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c29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG5cclxuY29uc3QgeyBDb21wb25lbnREaWFsb2csIFRleHRQcm9tcHQsIFdhdGVyZmFsbERpYWxvZyB9ID0gcmVxdWlyZSgnYm90YnVpbGRlci1kaWFsb2dzJyk7XHJcbmNvbnN0IHsgUW5BTWFrZXIgfSA9IHJlcXVpcmUoJ2JvdGJ1aWxkZXItYWknKTtcclxuY29uc3QgeyBNZXNzYWdlRmFjdG9yeSwgSW5wdXRIaW50cyB9ID0gcmVxdWlyZSgnYm90YnVpbGRlcicpO1xyXG5cclxuY29uc3QgQU5TV0VSX0RJQUxPRyA9ICdBTlNXRVJfRElBTE9HJztcclxuY29uc3QgV0FURVJGQUxMX0RJQUxPRyA9ICdXQVRFUkZBTExfRElBTE9HJztcclxuY29uc3QgVEVYVF9QUk9NUFQgPSAnVEVYVF9QUk9NUFQnO1xyXG5cclxuY2xhc3MgQW5zd2VyRGlhbG9nIGV4dGVuZHMgQ29tcG9uZW50RGlhbG9nIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKEFOU1dFUl9ESUFMT0cpO1xyXG4gICAgICAgIC8vdHJ5IHtcclxuICAgICAgICAgICAgdGhpcy5xbmFNYWtlciA9IG5ldyBRbkFNYWtlcih7XHJcbiAgICAgICAgICAgICAgICBrbm93bGVkZ2VCYXNlSWQ6IHByb2Nlc3MuZW52LlFuQUtub3dsZWRnZWJhc2VJZCxcclxuICAgICAgICAgICAgICAgIGVuZHBvaW50S2V5OiBwcm9jZXNzLmVudi5RbkFFbmRwb2ludEtleSxcclxuICAgICAgICAgICAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LlFuQUVuZHBvaW50SG9zdE5hbWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgLy8gICAgIGNvbnNvbGUud2FybihgUW5BTWFrZXIgRXhjZXB0aW9uOiAke2Vycn0gQ2hlY2sgeW91ciBRbkFNYWtlciBjb25maWd1cmF0aW9uIGluIC5lbnZgKTtcclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIHRoaXMuYWRkRGlhbG9nKG5ldyBUZXh0UHJvbXB0KFRFWFRfUFJPTVBUKSk7XHJcbiAgICAgICAgdGhpcy5hZGREaWFsb2cobmV3IFdhdGVyZmFsbERpYWxvZyhXQVRFUkZBTExfRElBTE9HLCBbXHJcbiAgICAgICAgICAgIHRoaXMuYmVnaW5TdGVwLmJpbmQodGhpcyksXHJcbiAgICAgICAgICAgIHRoaXMuYW5zd2VyU3RlcC5iaW5kKHRoaXMpXHJcbiAgICAgICAgXSkpO1xyXG5cclxuICAgICAgICB0aGlzLmluaXRpYWxEaWFsb2dJZCA9IFdBVEVSRkFMTF9ESUFMT0c7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgYmVnaW5TdGVwKHN0ZXBDb250ZXh0KSB7XHJcbiAgICAgICAgY29uc3QgbXNnID0gc3RlcENvbnRleHQub3B0aW9ucy5yZXN0YXJ0TXNnID8gc3RlcENvbnRleHQub3B0aW9ucy5yZXN0YXJ0TXNnIDogJ0ZlZWwgZnJlZSB0byBhc2sgYW55IHF1ZXN0aW9ucyB5b3UgaGF2ZS4nO1xyXG4gICAgICAgIGNvbnN0IHByb21wdE9wdGlvbnMgPSBNZXNzYWdlRmFjdG9yeS50ZXh0KG1zZywgbXNnLCBJbnB1dEhpbnRzLkV4cGVjdGluZ0lucHV0KTtcclxuXHJcbiAgICAgICAgLy8gQXNrIHRoZSB1c2VyIHRvIGVudGVyIHRoZWlyIG5hbWUuXHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHN0ZXBDb250ZXh0LnByb21wdChURVhUX1BST01QVCwgcHJvbXB0T3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgYW5zd2VyU3RlcChzdGVwQ29udGV4dCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDYWxsaW5nIFFuQSBNYWtlcicpO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHFuYVJlc3VsdHMgPSBhd2FpdCB0aGlzLnFuYU1ha2VyLmdldEFuc3dlcnMoc3RlcENvbnRleHQuY29udGV4dCk7XHJcbiAgICAgICAgICAgIHZhciBtc2cgPSAnJztcclxuICAgICAgICAgICAgLy8gSWYgYW4gYW5zd2VyIHdhcyByZWNlaXZlZCBmcm9tIFFuQSBNYWtlciwgc2VuZCB0aGUgYW5zd2VyIGJhY2sgdG8gdGhlIHVzZXIuXHJcbiAgICAgICAgICAgIGlmIChxbmFSZXN1bHRzWzBdKSB7XHJcbiAgICAgICAgICAgICAgICBtc2cgPSBxbmFSZXN1bHRzWzBdLmFuc3dlcjtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBJZiBubyBhbnN3ZXJzIHdlcmUgcmV0dXJuZWQgZnJvbSBRbkEgTWFrZXIsIHJlcGx5IHdpdGggaGVscC5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG1zZyA9ICdObyBRbkEgTWFrZXIgYW5zd2VycyB3ZXJlIGZvdW5kLic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IHN0ZXBDb250ZXh0LmNvbnRleHQuc2VuZEFjdGl2aXR5KCdTb3JyeSwgUW5BIG1ha2VyIGlzIGN1cnJlbnRseSB1bmF2YWlsYWJsZS4nKTtcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHN0ZXBDb250ZXh0LmVuZERpYWxvZygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYXdhaXQgc3RlcENvbnRleHQucmVwbGFjZURpYWxvZyh0aGlzLmluaXRpYWxEaWFsb2dJZCwgeyByZXN0YXJ0TXNnOiBtc2cgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzLkFuc3dlckRpYWxvZyA9IEFuc3dlckRpYWxvZztcclxubW9kdWxlLmV4cG9ydHMuQU5TV0VSX0RJQUxPRyA9IEFOU1dFUl9ESUFMT0c7Il19