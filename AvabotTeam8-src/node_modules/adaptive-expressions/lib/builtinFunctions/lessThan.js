"use strict";
/**
 * @module adaptive-expressions
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const expressionType_1 = require("../expressionType");
const functionUtils_1 = require("../functionUtils");
const comparisonEvaluator_1 = require("./comparisonEvaluator");
/**
 * Check whether the first value is less than the second value.
 * Return true if the first value is less, or return false if the first value is more.
 */
class LessThan extends comparisonEvaluator_1.ComparisonEvaluator {
    /**
     * Initializes a new instance of the [LessThan](xref:adaptive-expressions.LessThan) class.
     */
    constructor() {
        super(expressionType_1.ExpressionType.LessThan, LessThan.func, functionUtils_1.FunctionUtils.validateBinaryNumberOrString, functionUtils_1.FunctionUtils.verifyNumberOrString);
    }
    /**
     * @private
     */
    static func(args) {
        return args[0] < args[1];
    }
}
exports.LessThan = LessThan;
//# sourceMappingURL=lessThan.js.map