function cov_13uzh0bhr2(){var path="/Users/doudou/COMP0016_2020_21_Team8/AvabotTeam8-src/dialogs/mainDialog.js";var hash="2970cb85dbd1aa7de39ca26413fafe01cf69fd2f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/doudou/COMP0016_2020_21_Team8/AvabotTeam8-src/dialogs/mainDialog.js",statementMap:{"0":{start:{line:4,column:13},end:{line:4,column:28}},"1":{start:{line:5,column:14},end:{line:5,column:30}},"2":{start:{line:6,column:11},end:{line:6,column:24}},"3":{start:{line:7,column:12},end:{line:7,column:31}},"4":{start:{line:8,column:15},end:{line:8,column:35}},"5":{start:{line:19,column:4},end:{line:19,column:33}},"6":{start:{line:20,column:40},end:{line:20,column:65}},"7":{start:{line:21,column:34},end:{line:21,column:56}},"8":{start:{line:23,column:26},end:{line:23,column:45}},"9":{start:{line:24,column:22},end:{line:24,column:37}},"10":{start:{line:25,column:23},end:{line:25,column:39}},"11":{start:{line:26,column:25},end:{line:26,column:43}},"12":{start:{line:30,column:8},end:{line:30,column:28}},"13":{start:{line:32,column:8},end:{line:32,column:43}},"14":{start:{line:33,column:8},end:{line:33,column:60}},"15":{start:{line:34,column:8},end:{line:34,column:53}},"16":{start:{line:35,column:8},end:{line:35,column:56}},"17":{start:{line:36,column:8},end:{line:36,column:58}},"18":{start:{line:37,column:8},end:{line:37,column:86}},"19":{start:{line:39,column:8},end:{line:44,column:12}},"20":{start:{line:46,column:8},end:{line:46,column:48}},"21":{start:{line:56,column:26},end:{line:56,column:49}},"22":{start:{line:57,column:8},end:{line:57,column:28}},"23":{start:{line:59,column:30},end:{line:59,column:72}},"24":{start:{line:60,column:24},end:{line:60,column:60}},"25":{start:{line:61,column:8},end:{line:63,column:9}},"26":{start:{line:62,column:12},end:{line:62,column:53}},"27":{start:{line:69,column:20},end:{line:69,column:96}},"28":{start:{line:70,column:8},end:{line:73,column:11}},"29":{start:{line:77,column:23},end:{line:77,column:40}},"30":{start:{line:78,column:8},end:{line:96,column:9}},"31":{start:{line:79,column:12},end:{line:79,column:57}},"32":{start:{line:81,column:13},end:{line:96,column:9}},"33":{start:{line:82,column:32},end:{line:85,column:13}},"34":{start:{line:87,column:12},end:{line:87,column:71}},"35":{start:{line:90,column:32},end:{line:93,column:13}},"36":{start:{line:95,column:12},end:{line:95,column:71}},"37":{start:{line:101,column:8},end:{line:119,column:9}},"38":{start:{line:102,column:12},end:{line:102,column:52}},"39":{start:{line:103,column:23},end:{line:103,column:49}},"40":{start:{line:104,column:12},end:{line:114,column:13}},"41":{start:{line:105,column:27},end:{line:105,column:76}},"42":{start:{line:106,column:16},end:{line:106,column:45}},"43":{start:{line:107,column:16},end:{line:107,column:88}},"44":{start:{line:108,column:34},end:{line:108,column:58}},"45":{start:{line:109,column:16},end:{line:109,column:122}},"46":{start:{line:112,column:16},end:{line:112,column:66}},"47":{start:{line:113,column:16},end:{line:113,column:91}},"48":{start:{line:118,column:12},end:{line:118,column:113}},"49":{start:{line:125,column:8},end:{line:125,column:109}},"50":{start:{line:129,column:20},end:{line:129,column:34}},"51":{start:{line:130,column:8},end:{line:130,column:57}},"52":{start:{line:131,column:20},end:{line:131,column:34}},"53":{start:{line:132,column:8},end:{line:132,column:57}},"54":{start:{line:134,column:21},end:{line:144,column:11}},"55":{start:{line:145,column:21},end:{line:145,column:23}},"56":{start:{line:146,column:8},end:{line:158,column:10}},"57":{start:{line:147,column:12},end:{line:156,column:14}},"58":{start:{line:148,column:16},end:{line:148,column:43}},"59":{start:{line:149,column:16},end:{line:154,column:17}},"60":{start:{line:150,column:20},end:{line:150,column:51}},"61":{start:{line:151,column:20},end:{line:151,column:61}},"62":{start:{line:153,column:20},end:{line:153,column:35}},"63":{start:{line:160,column:8},end:{line:160,column:28}},"64":{start:{line:161,column:8},end:{line:161,column:28}},"65":{start:{line:162,column:8},end:{line:162,column:22}},"66":{start:{line:167,column:25},end:{line:167,column:100}},"67":{start:{line:168,column:32},end:{line:168,column:59}},"68":{start:{line:173,column:12},end:{line:181,column:13}},"69":{start:{line:176,column:16},end:{line:177,column:42}},"70":{start:{line:180,column:16},end:{line:180,column:90}},"71":{start:{line:182,column:12},end:{line:182,column:48}},"72":{start:{line:187,column:30},end:{line:187,column:96}},"73":{start:{line:188,column:16},end:{line:188,column:74}},"74":{start:{line:188,column:64},end:{line:188,column:73}},"75":{start:{line:189,column:8},end:{line:189,column:16}},"76":{start:{line:194,column:19},end:{line:194,column:76}},"77":{start:{line:195,column:8},end:{line:195,column:26}},"78":{start:{line:197,column:20},end:{line:197,column:41}},"79":{start:{line:200,column:30},end:{line:200,column:56}},"80":{start:{line:202,column:8},end:{line:219,column:9}},"81":{start:{line:204,column:29},end:{line:204,column:82}},"82":{start:{line:206,column:12},end:{line:210,column:13}},"83":{start:{line:207,column:16},end:{line:209,column:19}},"84":{start:{line:208,column:20},end:{line:208,column:94}},"85":{start:{line:211,column:12},end:{line:215,column:15}},"86":{start:{line:212,column:16},end:{line:214,column:17}},"87":{start:{line:213,column:20},end:{line:213,column:34}},"88":{start:{line:217,column:12},end:{line:217,column:33}},"89":{start:{line:218,column:12},end:{line:218,column:29}},"90":{start:{line:222,column:8},end:{line:225,column:10}},"91":{start:{line:231,column:8},end:{line:254,column:9}},"92":{start:{line:232,column:26},end:{line:232,column:54}},"93":{start:{line:233,column:30},end:{line:233,column:60}},"94":{start:{line:234,column:27},end:{line:234,column:29}},"95":{start:{line:236,column:12},end:{line:243,column:15}},"96":{start:{line:237,column:16},end:{line:242,column:17}},"97":{start:{line:238,column:20},end:{line:238,column:46}},"98":{start:{line:240,column:21},end:{line:242,column:17}},"99":{start:{line:241,column:20},end:{line:241,column:46}},"100":{start:{line:245,column:12},end:{line:245,column:54}},"101":{start:{line:248,column:12},end:{line:248,column:37}},"102":{start:{line:250,column:12},end:{line:250,column:99}},"103":{start:{line:253,column:12},end:{line:253,column:25}},"104":{start:{line:259,column:0},end:{line:259,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:29,column:4},end:{line:29,column:5}},loc:{start:{line:29,column:18},end:{line:47,column:5}},line:29},"1":{name:"(anonymous_1)",decl:{start:{line:55,column:4},end:{line:55,column:5}},loc:{start:{line:55,column:37},end:{line:64,column:5}},line:55},"2":{name:"(anonymous_2)",decl:{start:{line:66,column:4},end:{line:66,column:5}},loc:{start:{line:66,column:26},end:{line:74,column:5}},line:66},"3":{name:"(anonymous_3)",decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:27},end:{line:98,column:5}},line:76},"4":{name:"(anonymous_4)",decl:{start:{line:100,column:4},end:{line:100,column:5}},loc:{start:{line:100,column:24},end:{line:121,column:5}},line:100},"5":{name:"(anonymous_5)",decl:{start:{line:124,column:4},end:{line:124,column:5}},loc:{start:{line:124,column:27},end:{line:126,column:5}},line:124},"6":{name:"(anonymous_6)",decl:{start:{line:128,column:4},end:{line:128,column:5}},loc:{start:{line:128,column:24},end:{line:163,column:5}},line:128},"7":{name:"(anonymous_7)",decl:{start:{line:146,column:46},end:{line:146,column:47}},loc:{start:{line:146,column:57},end:{line:158,column:9}},line:146},"8":{name:"(anonymous_8)",decl:{start:{line:147,column:28},end:{line:147,column:29}},loc:{start:{line:147,column:38},end:{line:156,column:13}},line:147},"9":{name:"(anonymous_9)",decl:{start:{line:165,column:4},end:{line:165,column:5}},loc:{start:{line:165,column:48},end:{line:191,column:5}},line:165},"10":{name:"replyForReceivedAttachments",decl:{start:{line:172,column:23},end:{line:172,column:50}},loc:{start:{line:172,column:72},end:{line:183,column:9}},line:172},"11":{name:"(anonymous_11)",decl:{start:{line:188,column:54},end:{line:188,column:55}},loc:{start:{line:188,column:64},end:{line:188,column:73}},line:188},"12":{name:"(anonymous_12)",decl:{start:{line:193,column:4},end:{line:193,column:5}},loc:{start:{line:193,column:49},end:{line:226,column:5}},line:193},"13":{name:"(anonymous_13)",decl:{start:{line:207,column:58},end:{line:207,column:59}},loc:{start:{line:207,column:74},end:{line:209,column:17}},line:207},"14":{name:"(anonymous_14)",decl:{start:{line:211,column:55},end:{line:211,column:56}},loc:{start:{line:211,column:68},end:{line:215,column:13}},line:211},"15":{name:"(anonymous_15)",decl:{start:{line:230,column:4},end:{line:230,column:5}},loc:{start:{line:230,column:41},end:{line:255,column:5}},line:230},"16":{name:"(anonymous_16)",decl:{start:{line:236,column:32},end:{line:236,column:33}},loc:{start:{line:236,column:46},end:{line:243,column:13}},line:236}},branchMap:{"0":{loc:{start:{line:61,column:8},end:{line:63,column:9}},type:"if",locations:[{start:{line:61,column:8},end:{line:63,column:9}},{start:{line:61,column:8},end:{line:63,column:9}}],line:61},"1":{loc:{start:{line:69,column:20},end:{line:69,column:96}},type:"cond-expr",locations:[{start:{line:69,column:46},end:{line:69,column:69}},{start:{line:69,column:72},end:{line:69,column:96}}],line:69},"2":{loc:{start:{line:78,column:8},end:{line:96,column:9}},type:"if",locations:[{start:{line:78,column:8},end:{line:96,column:9}},{start:{line:78,column:8},end:{line:96,column:9}}],line:78},"3":{loc:{start:{line:81,column:13},end:{line:96,column:9}},type:"if",locations:[{start:{line:81,column:13},end:{line:96,column:9}},{start:{line:81,column:13},end:{line:96,column:9}}],line:81},"4":{loc:{start:{line:101,column:8},end:{line:119,column:9}},type:"if",locations:[{start:{line:101,column:8},end:{line:119,column:9}},{start:{line:101,column:8},end:{line:119,column:9}}],line:101},"5":{loc:{start:{line:101,column:12},end:{line:101,column:49}},type:"binary-expr",locations:[{start:{line:101,column:12},end:{line:101,column:23}},{start:{line:101,column:27},end:{line:101,column:49}}],line:101},"6":{loc:{start:{line:104,column:12},end:{line:114,column:13}},type:"if",locations:[{start:{line:104,column:12},end:{line:114,column:13}},{start:{line:104,column:12},end:{line:114,column:13}}],line:104},"7":{loc:{start:{line:149,column:16},end:{line:154,column:17}},type:"if",locations:[{start:{line:149,column:16},end:{line:154,column:17}},{start:{line:149,column:16},end:{line:154,column:17}}],line:149},"8":{loc:{start:{line:173,column:12},end:{line:181,column:13}},type:"if",locations:[{start:{line:173,column:12},end:{line:181,column:13}},{start:{line:173,column:12},end:{line:181,column:13}}],line:173},"9":{loc:{start:{line:206,column:12},end:{line:210,column:13}},type:"if",locations:[{start:{line:206,column:12},end:{line:210,column:13}},{start:{line:206,column:12},end:{line:210,column:13}}],line:206},"10":{loc:{start:{line:208,column:27},end:{line:208,column:93}},type:"cond-expr",locations:[{start:{line:208,column:62},end:{line:208,column:85}},{start:{line:208,column:88},end:{line:208,column:93}}],line:208},"11":{loc:{start:{line:208,column:27},end:{line:208,column:59}},type:"binary-expr",locations:[{start:{line:208,column:27},end:{line:208,column:32}},{start:{line:208,column:36},end:{line:208,column:59}}],line:208},"12":{loc:{start:{line:212,column:16},end:{line:214,column:17}},type:"if",locations:[{start:{line:212,column:16},end:{line:214,column:17}},{start:{line:212,column:16},end:{line:214,column:17}}],line:212},"13":{loc:{start:{line:231,column:8},end:{line:254,column:9}},type:"if",locations:[{start:{line:231,column:8},end:{line:254,column:9}},{start:{line:231,column:8},end:{line:254,column:9}}],line:231},"14":{loc:{start:{line:237,column:16},end:{line:242,column:17}},type:"if",locations:[{start:{line:237,column:16},end:{line:242,column:17}},{start:{line:237,column:16},end:{line:242,column:17}}],line:237},"15":{loc:{start:{line:237,column:20},end:{line:237,column:114}},type:"binary-expr",locations:[{start:{line:237,column:20},end:{line:237,column:66}},{start:{line:237,column:70},end:{line:237,column:114}}],line:237},"16":{loc:{start:{line:240,column:21},end:{line:242,column:17}},type:"if",locations:[{start:{line:240,column:21},end:{line:242,column:17}},{start:{line:240,column:21},end:{line:242,column:17}}],line:240},"17":{loc:{start:{line:240,column:25},end:{line:240,column:149}},type:"binary-expr",locations:[{start:{line:240,column:25},end:{line:240,column:62}},{start:{line:240,column:67},end:{line:240,column:106}},{start:{line:240,column:110},end:{line:240,column:148}}],line:240}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2970cb85dbd1aa7de39ca26413fafe01cf69fd2f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13uzh0bhr2=function(){return actualCoverage;};}return actualCoverage;}cov_13uzh0bhr2();// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
const path=(cov_13uzh0bhr2().s[0]++,require('path'));const axios=(cov_13uzh0bhr2().s[1]++,require('axios'));const fs=(cov_13uzh0bhr2().s[2]++,require('fs'));const fse=(cov_13uzh0bhr2().s[3]++,require("fs-extra"));var FormData=(cov_13uzh0bhr2().s[4]++,require("form-data"));const{AttachmentPrompt,ChoiceFactory,ChoicePrompt,ComponentDialog,ConfirmPrompt,DialogSet,DialogTurnStatus,TextPrompt,WaterfallDialog}=(cov_13uzh0bhr2().s[5]++,require('botbuilder-dialogs'));const{AnswerDialog,ANSWER_DIALOG}=(cov_13uzh0bhr2().s[6]++,require('./answerDialog'));const{DocDialog,DOC_DIALOG}=(cov_13uzh0bhr2().s[7]++,require('./docDialog'));const ATTACHMENT_PROMPT=(cov_13uzh0bhr2().s[8]++,'ATTACHMENT_PROMPT');const CHOICE_PROMPT=(cov_13uzh0bhr2().s[9]++,'CHOICE_PROMPT');const CONFIRM_PROMPT=(cov_13uzh0bhr2().s[10]++,'CONFIRM_PROMPT');const WATERFALL_DIALOG=(cov_13uzh0bhr2().s[11]++,'WATERFALL_DIALOG');class MainDialog extends ComponentDialog{constructor(){cov_13uzh0bhr2().f[0]++;cov_13uzh0bhr2().s[12]++;super('mainDialog');cov_13uzh0bhr2().s[13]++;this.addDialog(new AnswerDialog());cov_13uzh0bhr2().s[14]++;this.addDialog(new DocDialog(this.initialDialogId));cov_13uzh0bhr2().s[15]++;this.addDialog(new TextPrompt('TextPrompt'));cov_13uzh0bhr2().s[16]++;this.addDialog(new ChoicePrompt(CHOICE_PROMPT));cov_13uzh0bhr2().s[17]++;this.addDialog(new ConfirmPrompt(CONFIRM_PROMPT));cov_13uzh0bhr2().s[18]++;this.addDialog(new AttachmentPrompt(ATTACHMENT_PROMPT,this.promptValidator));cov_13uzh0bhr2().s[19]++;this.addDialog(new WaterfallDialog(WATERFALL_DIALOG,[this.startStep.bind(this),this.chooseStep.bind(this),this.docStep.bind(this),this.repeatStep.bind(this)]));cov_13uzh0bhr2().s[20]++;this.initialDialogId=WATERFALL_DIALOG;}/**
     * The run method handles the incoming activity (in the form of a TurnContext) and passes it through the dialog system.
     * If no dialog is active, it will start the default dialog.
     * @param {*} turnContext
     * @param {*} accessor
     */async run(turnContext,accessor){cov_13uzh0bhr2().f[1]++;const dialogSet=(cov_13uzh0bhr2().s[21]++,new DialogSet(accessor));cov_13uzh0bhr2().s[22]++;dialogSet.add(this);const dialogContext=(cov_13uzh0bhr2().s[23]++,await dialogSet.createContext(turnContext));const results=(cov_13uzh0bhr2().s[24]++,await dialogContext.continueDialog());cov_13uzh0bhr2().s[25]++;if(results.status===DialogTurnStatus.empty){cov_13uzh0bhr2().b[0][0]++;cov_13uzh0bhr2().s[26]++;await dialogContext.beginDialog(this.id);}else{cov_13uzh0bhr2().b[0][1]++;}}async startStep(step){cov_13uzh0bhr2().f[2]++;// WaterfallStep always finishes with the end of the Waterfall or with another dialog; here it is a Prompt Dialog.
// Running a prompt here means the next WaterfallStep will be run when the user's response is received.
const msg=(cov_13uzh0bhr2().s[27]++,step.options.restartMsg?(cov_13uzh0bhr2().b[1][0]++,step.options.restartMsg):(cov_13uzh0bhr2().b[1][1]++,'What can I do for you?'));cov_13uzh0bhr2().s[28]++;return await step.prompt(CHOICE_PROMPT,{prompt:msg,choices:ChoiceFactory.toChoices(['ask a question','process a document',,'recognize an image'])});}async chooseStep(step){cov_13uzh0bhr2().f[3]++;const choice=(cov_13uzh0bhr2().s[29]++,step.result.value);cov_13uzh0bhr2().s[30]++;if(choice=='ask a question'){cov_13uzh0bhr2().b[2][0]++;cov_13uzh0bhr2().s[31]++;return await step.beginDialog(ANSWER_DIALOG);}else{cov_13uzh0bhr2().b[2][1]++;cov_13uzh0bhr2().s[32]++;if(choice=='process a document'){cov_13uzh0bhr2().b[3][0]++;var promptOptions=(cov_13uzh0bhr2().s[33]++,{prompt:'Please attach a document in pdf.',retryPrompt:'That was not a document that I can help, please try again.'});cov_13uzh0bhr2().s[34]++;return await step.prompt(ATTACHMENT_PROMPT,promptOptions);}else{cov_13uzh0bhr2().b[3][1]++;var promptOptions=(cov_13uzh0bhr2().s[35]++,{prompt:'Please attach an image.',retryPrompt:'That was not an image that I can help, please try again.'});cov_13uzh0bhr2().s[36]++;return await step.prompt(ATTACHMENT_PROMPT,promptOptions);}}}async docStep(step){cov_13uzh0bhr2().f[4]++;cov_13uzh0bhr2().s[37]++;if((cov_13uzh0bhr2().b[5][0]++,step.result)&&(cov_13uzh0bhr2().b[5][1]++,step.result.length>0)){cov_13uzh0bhr2().b[4][0]++;cov_13uzh0bhr2().s[38]++;console.log(step.result[0].contentType);var type=(cov_13uzh0bhr2().s[39]++,step.result[0].contentType);cov_13uzh0bhr2().s[40]++;if(type==='application/pdf'){cov_13uzh0bhr2().b[6][0]++;var path=(cov_13uzh0bhr2().s[41]++,await this.handleIncomingAttachment(step.context));cov_13uzh0bhr2().s[42]++;console.log('path: '+path);cov_13uzh0bhr2().s[43]++;await step.context.sendActivity('Processing the document, please wait');var req_results=(cov_13uzh0bhr2().s[44]++,await this.sendReq(path));cov_13uzh0bhr2().s[45]++;return await step.beginDialog(DOC_DIALOG,{sum:req_results[0],query:req_results[1],filepath:path});}else{cov_13uzh0bhr2().b[6][1]++;cov_13uzh0bhr2().s[46]++;await this.handleIncomingAttachment(step.context);cov_13uzh0bhr2().s[47]++;return await step.context.sendActivity('More functions to be updating...');}}else{cov_13uzh0bhr2().b[4][1]++;cov_13uzh0bhr2().s[48]++;return await step.replaceDialog(this.initialDialogId,{restartMsg:'What else can I do for you?'});}}async repeatStep(step){cov_13uzh0bhr2().f[5]++;cov_13uzh0bhr2().s[49]++;return await step.replaceDialog(this.initialDialogId,{restartMsg:'What else can I do for you?'});}async sendReq(path){cov_13uzh0bhr2().f[6]++;var form1=(cov_13uzh0bhr2().s[50]++,new FormData());cov_13uzh0bhr2().s[51]++;form1.append("file",fse.createReadStream(path));var form2=(cov_13uzh0bhr2().s[52]++,new FormData());cov_13uzh0bhr2().s[53]++;form2.append("file",fse.createReadStream(path));let reqArr=(cov_13uzh0bhr2().s[54]++,[axios({method:"post",url:"https://textsumapi.azurewebsites.net/api/textsumapi",data:form1,headers:form1.getHeaders()}),axios({method:"post",url:"http://51.11.182.5:5000",data:form2,headers:form2.getHeaders()})]);var output=(cov_13uzh0bhr2().s[55]++,[]);cov_13uzh0bhr2().s[56]++;await Promise.allSettled(reqArr).then(results=>{cov_13uzh0bhr2().f[7]++;cov_13uzh0bhr2().s[57]++;results.forEach(result=>{cov_13uzh0bhr2().f[8]++;cov_13uzh0bhr2().s[58]++;console.log(result.status);cov_13uzh0bhr2().s[59]++;if(result.status=='fulfilled'){cov_13uzh0bhr2().b[7][0]++;cov_13uzh0bhr2().s[60]++;output.push(result.value.data);cov_13uzh0bhr2().s[61]++;console.log('first: '+result.value.data);}else{cov_13uzh0bhr2().b[7][1]++;cov_13uzh0bhr2().s[62]++;output.push(0);}});});cov_13uzh0bhr2().s[63]++;console.log("完成啦！");cov_13uzh0bhr2().s[64]++;console.log(output);cov_13uzh0bhr2().s[65]++;return output;}async handleIncomingAttachment(turnContext){cov_13uzh0bhr2().f[9]++;// Prepare Promises to download each attachment and then execute each Promise.
const promises=(cov_13uzh0bhr2().s[66]++,await turnContext.activity.attachments.map(this.downloadAttachmentAndWrite));const successfulSaves=(cov_13uzh0bhr2().s[67]++,await Promise.all(promises));// Replies back to the user with information about where the attachment is stored on the bot's server,
// and what the name of the saved file is.
async function replyForReceivedAttachments(localAttachmentData){cov_13uzh0bhr2().f[10]++;cov_13uzh0bhr2().s[68]++;if(localAttachmentData){cov_13uzh0bhr2().b[8][0]++;cov_13uzh0bhr2().s[69]++;// Because the TurnContext was bound to this function, the bot can call
// `TurnContext.sendActivity` via `this.sendActivity`;
await this.sendActivity(`Attachment "${localAttachmentData.fileName}" `+`has been received.`);}else{cov_13uzh0bhr2().b[8][1]++;cov_13uzh0bhr2().s[70]++;await this.sendActivity('Attachment was not successfully saved to disk.');}cov_13uzh0bhr2().s[71]++;return localAttachmentData.localPath;}// Prepare Promises to reply to the user with information about saved attachments.
// The current TurnContext is bound so `replyForReceivedAttachments` can also send replies.
const replyPromises=(cov_13uzh0bhr2().s[72]++,successfulSaves.map(replyForReceivedAttachments.bind(turnContext)));let r=(cov_13uzh0bhr2().s[73]++,await Promise.all(replyPromises).then(result=>{cov_13uzh0bhr2().f[11]++;cov_13uzh0bhr2().s[74]++;return result[0];}));cov_13uzh0bhr2().s[75]++;return r;}async downloadAttachmentAndWrite(attachment){cov_13uzh0bhr2().f[12]++;var name=(cov_13uzh0bhr2().s[76]++,'text.'+attachment.contentType.toString().split('/')[1]);cov_13uzh0bhr2().s[77]++;console.log(name);// Retrieve the attachment via the attachment's contentUrl.
const url=(cov_13uzh0bhr2().s[78]++,attachment.contentUrl);// Local file path for the bot to save the attachment.
const localFileName=(cov_13uzh0bhr2().s[79]++,path.join(__dirname,name));cov_13uzh0bhr2().s[80]++;try{// arraybuffer is necessary for images
const response=(cov_13uzh0bhr2().s[81]++,await axios.get(url,{responseType:'arraybuffer'}));// If user uploads JSON file, this prevents it from being written as "{"type":"Buffer","data":[123,13,10,32,32,34,108..."
cov_13uzh0bhr2().s[82]++;if(response.headers['content-type']==='application/json'){cov_13uzh0bhr2().b[9][0]++;cov_13uzh0bhr2().s[83]++;response.data=JSON.parse(response.data,(key,value)=>{cov_13uzh0bhr2().f[13]++;cov_13uzh0bhr2().s[84]++;return(cov_13uzh0bhr2().b[11][0]++,value)&&(cov_13uzh0bhr2().b[11][1]++,value.type==='Buffer')?(cov_13uzh0bhr2().b[10][0]++,Buffer.from(value.data)):(cov_13uzh0bhr2().b[10][1]++,value);});}else{cov_13uzh0bhr2().b[9][1]++;}cov_13uzh0bhr2().s[85]++;fs.writeFile(localFileName,response.data,fsError=>{cov_13uzh0bhr2().f[14]++;cov_13uzh0bhr2().s[86]++;if(fsError){cov_13uzh0bhr2().b[12][0]++;cov_13uzh0bhr2().s[87]++;throw fsError;}else{cov_13uzh0bhr2().b[12][1]++;}});}catch(error){cov_13uzh0bhr2().s[88]++;console.error(error);cov_13uzh0bhr2().s[89]++;return undefined;}// If no error was thrown while writing to disk, return the attachment's name
// and localFilePath for the response back to the user.
cov_13uzh0bhr2().s[90]++;return{fileName:attachment.name,localPath:localFileName};}async promptValidator(promptContext){cov_13uzh0bhr2().f[15]++;cov_13uzh0bhr2().s[91]++;if(promptContext.recognized.succeeded){cov_13uzh0bhr2().b[13][0]++;var docType=(cov_13uzh0bhr2().s[92]++,promptContext.options.prompt);var attachments=(cov_13uzh0bhr2().s[93]++,promptContext.recognized.value);var validDoc=(cov_13uzh0bhr2().s[94]++,[]);cov_13uzh0bhr2().s[95]++;attachments.forEach(attachment=>{cov_13uzh0bhr2().f[16]++;cov_13uzh0bhr2().s[96]++;if((cov_13uzh0bhr2().b[15][0]++,docType==='Please attach a document in pdf.')&&(cov_13uzh0bhr2().b[15][1]++,attachment.contentType==='application/pdf')){cov_13uzh0bhr2().b[14][0]++;cov_13uzh0bhr2().s[97]++;//|| attachment.contentType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'|| attachment.contentType === 'application/msword'
validDoc.push(attachment);}else{cov_13uzh0bhr2().b[14][1]++;cov_13uzh0bhr2().s[98]++;if((cov_13uzh0bhr2().b[17][0]++,docType==='Please attach an image.')&&((cov_13uzh0bhr2().b[17][1]++,attachment.contentType==='image/jpeg')||(cov_13uzh0bhr2().b[17][2]++,attachment.contentType==='image/png'))){cov_13uzh0bhr2().b[16][0]++;cov_13uzh0bhr2().s[99]++;validDoc.push(attachment);}else{cov_13uzh0bhr2().b[16][1]++;}}});cov_13uzh0bhr2().s[100]++;promptContext.recognized.value=validDoc;// If none of the attachments are valid images, the retry prompt should be sent.
cov_13uzh0bhr2().s[101]++;return!!validDoc.length;}else{cov_13uzh0bhr2().b[13][1]++;cov_13uzh0bhr2().s[102]++;await promptContext.context.sendActivity('No attachments received, please try again.');// We can return true from a validator function even if Recognized.Succeeded is false.
cov_13uzh0bhr2().s[103]++;return false;}}}cov_13uzh0bhr2().s[104]++;module.exports.MainDialog=MainDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,