function cov_13uzh0bhr2(){var path="/Users/doudou/COMP0016_2020_21_Team8/AvabotTeam8-src/dialogs/mainDialog.js";var hash="c8688068e20752434bb55ee2a22cf2da669acaa6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/doudou/COMP0016_2020_21_Team8/AvabotTeam8-src/dialogs/mainDialog.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:14},end:{line:2,column:30}},"2":{start:{line:3,column:11},end:{line:3,column:24}},"3":{start:{line:4,column:12},end:{line:4,column:31}},"4":{start:{line:5,column:15},end:{line:5,column:35}},"5":{start:{line:14,column:4},end:{line:14,column:33}},"6":{start:{line:15,column:40},end:{line:15,column:65}},"7":{start:{line:16,column:34},end:{line:16,column:56}},"8":{start:{line:18,column:26},end:{line:18,column:45}},"9":{start:{line:19,column:22},end:{line:19,column:37}},"10":{start:{line:20,column:25},end:{line:20,column:43}},"11":{start:{line:29,column:4},end:{line:29,column:24}},"12":{start:{line:30,column:4},end:{line:30,column:39}},"13":{start:{line:31,column:4},end:{line:31,column:56}},"14":{start:{line:32,column:4},end:{line:32,column:52}},"15":{start:{line:33,column:4},end:{line:35,column:6}},"16":{start:{line:37,column:4},end:{line:44,column:6}},"17":{start:{line:46,column:4},end:{line:46,column:44}},"18":{start:{line:56,column:22},end:{line:56,column:45}},"19":{start:{line:57,column:4},end:{line:57,column:24}},"20":{start:{line:59,column:26},end:{line:59,column:68}},"21":{start:{line:60,column:20},end:{line:60,column:56}},"22":{start:{line:61,column:4},end:{line:63,column:5}},"23":{start:{line:62,column:6},end:{line:62,column:47}},"24":{start:{line:74,column:16},end:{line:76,column:32}},"25":{start:{line:77,column:4},end:{line:85,column:7}},"26":{start:{line:94,column:19},end:{line:94,column:36}},"27":{start:{line:95,column:4},end:{line:112,column:5}},"28":{start:{line:96,column:6},end:{line:96,column:51}},"29":{start:{line:97,column:11},end:{line:112,column:5}},"30":{start:{line:98,column:26},end:{line:102,column:7}},"31":{start:{line:104,column:6},end:{line:104,column:65}},"32":{start:{line:106,column:26},end:{line:110,column:7}},"33":{start:{line:111,column:6},end:{line:111,column:65}},"34":{start:{line:121,column:4},end:{line:182,column:5}},"35":{start:{line:122,column:17},end:{line:122,column:43}},"36":{start:{line:124,column:17},end:{line:124,column:66}},"37":{start:{line:125,column:6},end:{line:125,column:24}},"38":{start:{line:126,column:6},end:{line:181,column:7}},"39":{start:{line:127,column:8},end:{line:180,column:9}},"40":{start:{line:128,column:10},end:{line:130,column:12}},"41":{start:{line:132,column:28},end:{line:132,column:52}},"42":{start:{line:134,column:10},end:{line:136,column:28}},"43":{start:{line:135,column:12},end:{line:135,column:32}},"44":{start:{line:138,column:10},end:{line:143,column:13}},"45":{start:{line:145,column:29},end:{line:145,column:31}},"46":{start:{line:146,column:10},end:{line:148,column:12}},"47":{start:{line:150,column:21},end:{line:150,column:35}},"48":{start:{line:151,column:10},end:{line:151,column:58}},"49":{start:{line:152,column:10},end:{line:167,column:15}},"50":{start:{line:160,column:22},end:{line:160,column:35}},"51":{start:{line:161,column:14},end:{line:163,column:17}},"52":{start:{line:162,column:16},end:{line:162,column:44}},"53":{start:{line:166,column:14},end:{line:166,column:33}},"54":{start:{line:169,column:10},end:{line:171,column:28}},"55":{start:{line:170,column:12},end:{line:170,column:32}},"56":{start:{line:173,column:10},end:{line:179,column:11}},"57":{start:{line:174,column:12},end:{line:174,column:58}},"58":{start:{line:176,column:12},end:{line:178,column:14}},"59":{start:{line:184,column:4},end:{line:184,column:29}},"60":{start:{line:193,column:4},end:{line:195,column:7}},"61":{start:{line:204,column:16},end:{line:204,column:30}},"62":{start:{line:205,column:4},end:{line:205,column:53}},"63":{start:{line:206,column:16},end:{line:206,column:30}},"64":{start:{line:207,column:4},end:{line:207,column:53}},"65":{start:{line:208,column:16},end:{line:208,column:30}},"66":{start:{line:209,column:4},end:{line:209,column:53}},"67":{start:{line:211,column:17},end:{line:231,column:5}},"68":{start:{line:232,column:17},end:{line:232,column:19}},"69":{start:{line:234,column:4},end:{line:245,column:7}},"70":{start:{line:235,column:6},end:{line:244,column:9}},"71":{start:{line:236,column:8},end:{line:236,column:35}},"72":{start:{line:238,column:8},end:{line:243,column:9}},"73":{start:{line:239,column:10},end:{line:239,column:41}},"74":{start:{line:240,column:10},end:{line:240,column:53}},"75":{start:{line:242,column:10},end:{line:242,column:25}},"76":{start:{line:246,column:4},end:{line:246,column:29}},"77":{start:{line:247,column:4},end:{line:247,column:24}},"78":{start:{line:248,column:4},end:{line:248,column:18}},"79":{start:{line:258,column:21},end:{line:260,column:5}},"80":{start:{line:261,column:28},end:{line:261,column:55}},"81":{start:{line:265,column:6},end:{line:275,column:7}},"82":{start:{line:268,column:8},end:{line:270,column:10}},"83":{start:{line:271,column:8},end:{line:271,column:45}},"84":{start:{line:273,column:8},end:{line:273,column:77}},"85":{start:{line:274,column:8},end:{line:274,column:25}},"86":{start:{line:280,column:26},end:{line:282,column:5}},"87":{start:{line:283,column:12},end:{line:283,column:72}},"88":{start:{line:283,column:62},end:{line:283,column:71}},"89":{start:{line:284,column:4},end:{line:284,column:13}},"90":{start:{line:293,column:15},end:{line:293,column:30}},"91":{start:{line:295,column:16},end:{line:295,column:37}},"92":{start:{line:298,column:26},end:{line:298,column:52}},"93":{start:{line:300,column:4},end:{line:311,column:5}},"94":{start:{line:302,column:23},end:{line:302,column:76}},"95":{start:{line:303,column:6},end:{line:307,column:9}},"96":{start:{line:304,column:8},end:{line:306,column:9}},"97":{start:{line:305,column:10},end:{line:305,column:24}},"98":{start:{line:309,column:6},end:{line:309,column:27}},"99":{start:{line:310,column:6},end:{line:310,column:23}},"100":{start:{line:314,column:4},end:{line:317,column:6}},"101":{start:{line:326,column:4},end:{line:355,column:5}},"102":{start:{line:327,column:20},end:{line:327,column:48}},"103":{start:{line:328,column:24},end:{line:328,column:54}},"104":{start:{line:329,column:21},end:{line:329,column:23}},"105":{start:{line:331,column:6},end:{line:344,column:9}},"106":{start:{line:332,column:8},end:{line:343,column:9}},"107":{start:{line:336,column:10},end:{line:336,column:36}},"108":{start:{line:337,column:15},end:{line:343,column:9}},"109":{start:{line:342,column:10},end:{line:342,column:36}},"110":{start:{line:346,column:6},end:{line:346,column:48}},"111":{start:{line:349,column:6},end:{line:349,column:31}},"112":{start:{line:351,column:6},end:{line:351,column:75}},"113":{start:{line:354,column:6},end:{line:354,column:18}},"114":{start:{line:359,column:0},end:{line:359,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:16},end:{line:47,column:3}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:55,column:2},end:{line:55,column:3}},loc:{start:{line:55,column:35},end:{line:64,column:3}},line:55},"2":{name:"(anonymous_2)",decl:{start:{line:71,column:2},end:{line:71,column:3}},loc:{start:{line:71,column:24},end:{line:86,column:3}},line:71},"3":{name:"(anonymous_3)",decl:{start:{line:93,column:2},end:{line:93,column:3}},loc:{start:{line:93,column:25},end:{line:113,column:3}},line:93},"4":{name:"(anonymous_4)",decl:{start:{line:120,column:2},end:{line:120,column:3}},loc:{start:{line:120,column:22},end:{line:185,column:3}},line:120},"5":{name:"(anonymous_5)",decl:{start:{line:159,column:18},end:{line:159,column:19}},loc:{start:{line:159,column:38},end:{line:164,column:13}},line:159},"6":{name:"(anonymous_6)",decl:{start:{line:161,column:24},end:{line:161,column:25}},loc:{start:{line:161,column:34},end:{line:163,column:15}},line:161},"7":{name:"(anonymous_7)",decl:{start:{line:165,column:19},end:{line:165,column:20}},loc:{start:{line:165,column:36},end:{line:167,column:13}},line:165},"8":{name:"(anonymous_8)",decl:{start:{line:192,column:2},end:{line:192,column:3}},loc:{start:{line:192,column:25},end:{line:196,column:3}},line:192},"9":{name:"(anonymous_9)",decl:{start:{line:203,column:2},end:{line:203,column:3}},loc:{start:{line:203,column:22},end:{line:249,column:3}},line:203},"10":{name:"(anonymous_10)",decl:{start:{line:234,column:42},end:{line:234,column:43}},loc:{start:{line:234,column:55},end:{line:245,column:5}},line:234},"11":{name:"(anonymous_11)",decl:{start:{line:235,column:22},end:{line:235,column:23}},loc:{start:{line:235,column:34},end:{line:244,column:7}},line:235},"12":{name:"(anonymous_12)",decl:{start:{line:256,column:2},end:{line:256,column:3}},loc:{start:{line:256,column:46},end:{line:285,column:3}},line:256},"13":{name:"replyForReceivedAttachments",decl:{start:{line:264,column:19},end:{line:264,column:46}},loc:{start:{line:264,column:68},end:{line:276,column:5}},line:264},"14":{name:"(anonymous_14)",decl:{start:{line:283,column:50},end:{line:283,column:51}},loc:{start:{line:283,column:62},end:{line:283,column:71}},line:283},"15":{name:"(anonymous_15)",decl:{start:{line:292,column:2},end:{line:292,column:3}},loc:{start:{line:292,column:47},end:{line:318,column:3}},line:292},"16":{name:"(anonymous_16)",decl:{start:{line:303,column:49},end:{line:303,column:50}},loc:{start:{line:303,column:62},end:{line:307,column:7}},line:303},"17":{name:"(anonymous_17)",decl:{start:{line:325,column:2},end:{line:325,column:3}},loc:{start:{line:325,column:39},end:{line:356,column:3}},line:325},"18":{name:"(anonymous_18)",decl:{start:{line:331,column:26},end:{line:331,column:27}},loc:{start:{line:331,column:42},end:{line:344,column:7}},line:331}},branchMap:{"0":{loc:{start:{line:61,column:4},end:{line:63,column:5}},type:"if",locations:[{start:{line:61,column:4},end:{line:63,column:5}},{start:{line:61,column:4},end:{line:63,column:5}}],line:61},"1":{loc:{start:{line:74,column:16},end:{line:76,column:32}},type:"cond-expr",locations:[{start:{line:75,column:8},end:{line:75,column:31}},{start:{line:76,column:8},end:{line:76,column:32}}],line:74},"2":{loc:{start:{line:95,column:4},end:{line:112,column:5}},type:"if",locations:[{start:{line:95,column:4},end:{line:112,column:5}},{start:{line:95,column:4},end:{line:112,column:5}}],line:95},"3":{loc:{start:{line:97,column:11},end:{line:112,column:5}},type:"if",locations:[{start:{line:97,column:11},end:{line:112,column:5}},{start:{line:97,column:11},end:{line:112,column:5}}],line:97},"4":{loc:{start:{line:121,column:4},end:{line:182,column:5}},type:"if",locations:[{start:{line:121,column:4},end:{line:182,column:5}},{start:{line:121,column:4},end:{line:182,column:5}}],line:121},"5":{loc:{start:{line:121,column:8},end:{line:121,column:48}},type:"binary-expr",locations:[{start:{line:121,column:8},end:{line:121,column:19}},{start:{line:121,column:23},end:{line:121,column:48}}],line:121},"6":{loc:{start:{line:126,column:6},end:{line:181,column:7}},type:"if",locations:[{start:{line:126,column:6},end:{line:181,column:7}},{start:{line:126,column:6},end:{line:181,column:7}}],line:126},"7":{loc:{start:{line:127,column:8},end:{line:180,column:9}},type:"if",locations:[{start:{line:127,column:8},end:{line:180,column:9}},{start:{line:127,column:8},end:{line:180,column:9}}],line:127},"8":{loc:{start:{line:173,column:10},end:{line:179,column:11}},type:"if",locations:[{start:{line:173,column:10},end:{line:179,column:11}},{start:{line:173,column:10},end:{line:179,column:11}}],line:173},"9":{loc:{start:{line:238,column:8},end:{line:243,column:9}},type:"if",locations:[{start:{line:238,column:8},end:{line:243,column:9}},{start:{line:238,column:8},end:{line:243,column:9}}],line:238},"10":{loc:{start:{line:265,column:6},end:{line:275,column:7}},type:"if",locations:[{start:{line:265,column:6},end:{line:275,column:7}},{start:{line:265,column:6},end:{line:275,column:7}}],line:265},"11":{loc:{start:{line:304,column:8},end:{line:306,column:9}},type:"if",locations:[{start:{line:304,column:8},end:{line:306,column:9}},{start:{line:304,column:8},end:{line:306,column:9}}],line:304},"12":{loc:{start:{line:326,column:4},end:{line:355,column:5}},type:"if",locations:[{start:{line:326,column:4},end:{line:355,column:5}},{start:{line:326,column:4},end:{line:355,column:5}}],line:326},"13":{loc:{start:{line:332,column:8},end:{line:343,column:9}},type:"if",locations:[{start:{line:332,column:8},end:{line:343,column:9}},{start:{line:332,column:8},end:{line:343,column:9}}],line:332},"14":{loc:{start:{line:333,column:10},end:{line:334,column:54}},type:"binary-expr",locations:[{start:{line:333,column:10},end:{line:333,column:56}},{start:{line:334,column:10},end:{line:334,column:54}}],line:333},"15":{loc:{start:{line:337,column:15},end:{line:343,column:9}},type:"if",locations:[{start:{line:337,column:15},end:{line:343,column:9}},{start:{line:337,column:15},end:{line:343,column:9}}],line:337},"16":{loc:{start:{line:338,column:10},end:{line:340,column:51}},type:"binary-expr",locations:[{start:{line:338,column:10},end:{line:338,column:47}},{start:{line:339,column:11},end:{line:339,column:50}},{start:{line:340,column:12},end:{line:340,column:50}}],line:338}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c8688068e20752434bb55ee2a22cf2da669acaa6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13uzh0bhr2=function(){return actualCoverage;};}return actualCoverage;}cov_13uzh0bhr2();const path=(cov_13uzh0bhr2().s[0]++,require("path"));const axios=(cov_13uzh0bhr2().s[1]++,require("axios"));const fs=(cov_13uzh0bhr2().s[2]++,require("fs"));const fse=(cov_13uzh0bhr2().s[3]++,require("fs-extra"));var FormData=(cov_13uzh0bhr2().s[4]++,require("form-data"));const{AttachmentPrompt,ChoiceFactory,ChoicePrompt,ComponentDialog,DialogSet,DialogTurnStatus,WaterfallDialog}=(cov_13uzh0bhr2().s[5]++,require("botbuilder-dialogs"));const{AnswerDialog,ANSWER_DIALOG}=(cov_13uzh0bhr2().s[6]++,require("./answerDialog"));const{DocDialog,DOC_DIALOG}=(cov_13uzh0bhr2().s[7]++,require("./docDialog"));const ATTACHMENT_PROMPT=(cov_13uzh0bhr2().s[8]++,"ATTACHMENT_PROMPT");const CHOICE_PROMPT=(cov_13uzh0bhr2().s[9]++,"CHOICE_PROMPT");const WATERFALL_DIALOG=(cov_13uzh0bhr2().s[10]++,"WATERFALL_DIALOG");/**
 * The bot's main dialog
 * @class MainDialog
 * @extends {ComponentDialog}
 */class MainDialog extends ComponentDialog{constructor(){cov_13uzh0bhr2().f[0]++;cov_13uzh0bhr2().s[11]++;super("mainDialog");cov_13uzh0bhr2().s[12]++;this.addDialog(new AnswerDialog());cov_13uzh0bhr2().s[13]++;this.addDialog(new DocDialog(this.initialDialogId));cov_13uzh0bhr2().s[14]++;this.addDialog(new ChoicePrompt(CHOICE_PROMPT));cov_13uzh0bhr2().s[15]++;this.addDialog(new AttachmentPrompt(ATTACHMENT_PROMPT,this.promptValidator));cov_13uzh0bhr2().s[16]++;this.addDialog(new WaterfallDialog(WATERFALL_DIALOG,[this.startStep.bind(this),this.chooseStep.bind(this),this.docStep.bind(this),this.repeatStep.bind(this)]));cov_13uzh0bhr2().s[17]++;this.initialDialogId=WATERFALL_DIALOG;}/**
   * The run method handles the incoming activity (in the form of a TurnContext) and passes it through the dialog system.
   * If no dialog is active, it will start the default dialog.
   * @param {*} turnContext
   * @param {*} accessor
   */async run(turnContext,accessor){cov_13uzh0bhr2().f[1]++;const dialogSet=(cov_13uzh0bhr2().s[18]++,new DialogSet(accessor));cov_13uzh0bhr2().s[19]++;dialogSet.add(this);const dialogContext=(cov_13uzh0bhr2().s[20]++,await dialogSet.createContext(turnContext));const results=(cov_13uzh0bhr2().s[21]++,await dialogContext.continueDialog());cov_13uzh0bhr2().s[22]++;if(results.status===DialogTurnStatus.empty){cov_13uzh0bhr2().b[0][0]++;cov_13uzh0bhr2().s[23]++;await dialogContext.beginDialog(this.id);}else{cov_13uzh0bhr2().b[0][1]++;}}/**
   * The waterfall step to let user choose which feature to use.
   * @param {*} step
   * @returns {*} a non-null DialogTurnResult
   */async startStep(step){cov_13uzh0bhr2().f[2]++;// WaterfallStep always finishes with the end of the Waterfall or with another dialog; here it is a Prompt Dialog.
// Running a prompt here means the next WaterfallStep will be run when the user's response is received.
const msg=(cov_13uzh0bhr2().s[24]++,step.options.restartMsg?(cov_13uzh0bhr2().b[1][0]++,step.options.restartMsg):(cov_13uzh0bhr2().b[1][1]++,"What can I do for you?"));cov_13uzh0bhr2().s[25]++;return await step.prompt(CHOICE_PROMPT,{prompt:msg,choices:ChoiceFactory.toChoices(["ask a question","process a document",,"recognize an image"])});}/**
   * If user has chosen QnA, jump to question answering dialog; Otherwise, ask user to upload attachment.
   * @param {*} step
   * @returns {*} a non-null DialogTurnResult
   */async chooseStep(step){cov_13uzh0bhr2().f[3]++;const choice=(cov_13uzh0bhr2().s[26]++,step.result.value);cov_13uzh0bhr2().s[27]++;if(choice=="ask a question"){cov_13uzh0bhr2().b[2][0]++;cov_13uzh0bhr2().s[28]++;return await step.beginDialog(ANSWER_DIALOG);}else{cov_13uzh0bhr2().b[2][1]++;cov_13uzh0bhr2().s[29]++;if(choice=="process a document"){cov_13uzh0bhr2().b[3][0]++;var promptOptions=(cov_13uzh0bhr2().s[30]++,{prompt:"Please attach a document in pdf.",retryPrompt:"That was not a document that I can help, please try again with a document in pdf."});cov_13uzh0bhr2().s[31]++;return await step.prompt(ATTACHMENT_PROMPT,promptOptions);}else{cov_13uzh0bhr2().b[3][1]++;var promptOptions=(cov_13uzh0bhr2().s[32]++,{prompt:"Please attach an image.",retryPrompt:"That was not an image that I can help, please try again with an image in png/jpg."});cov_13uzh0bhr2().s[33]++;return await step.prompt(ATTACHMENT_PROMPT,promptOptions);}}}/**
   * If received attachment is in pdf, jump to docDialog; Otherwise recognize the image for user.
   * @param {*} step
   * @returns {*} a non-null DialogTurnResult
   */async docStep(step){cov_13uzh0bhr2().f[4]++;cov_13uzh0bhr2().s[34]++;if((cov_13uzh0bhr2().b[5][0]++,step.result)&&(cov_13uzh0bhr2().b[5][1]++,step.result[0].contentUrl)){cov_13uzh0bhr2().b[4][0]++;var type=(cov_13uzh0bhr2().s[35]++,step.result[0].contentType);//save attachment to the server, keep the path of the saved file.
var path=(cov_13uzh0bhr2().s[36]++,await this.handleIncomingAttachment(step.context));cov_13uzh0bhr2().s[37]++;console.log(path);cov_13uzh0bhr2().s[38]++;if(path){cov_13uzh0bhr2().b[6][0]++;cov_13uzh0bhr2().s[39]++;if(type==="application/pdf"){cov_13uzh0bhr2().b[7][0]++;cov_13uzh0bhr2().s[40]++;await step.context.sendActivity("Processing the document, please wait, it will take around 55 seconds");//perform HTTP requests for document here
var req_results=(cov_13uzh0bhr2().s[41]++,await this.sendReq(path));// delete user file after use
cov_13uzh0bhr2().s[42]++;try{cov_13uzh0bhr2().s[43]++;fs.unlinkSync(path);}catch(error){}// start docDialog, passing the document processing results and the file path.
cov_13uzh0bhr2().s[44]++;return await step.beginDialog(DOC_DIALOG,{sum:req_results[0],query:req_results[1],form:req_results[2],filepath:path});}else{cov_13uzh0bhr2().b[7][1]++;var image_result=(cov_13uzh0bhr2().s[45]++,"");cov_13uzh0bhr2().s[46]++;await step.context.sendActivity("Processing the image, please wait, it will take around 15 seconds");// perform image recognition request
var form=(cov_13uzh0bhr2().s[47]++,new FormData());cov_13uzh0bhr2().s[48]++;form.append("file",fse.createReadStream(path));cov_13uzh0bhr2().s[49]++;await axios({method:"post",url:"http://avabotformrecog.azurewebsites.net/api/FormRecogFunction?type=BusinessCard",data:form,headers:form.getHeaders()}).then(function(response){cov_13uzh0bhr2().f[5]++;var a=(cov_13uzh0bhr2().s[50]++,response.data);cov_13uzh0bhr2().s[51]++;a.forEach(line=>{cov_13uzh0bhr2().f[6]++;cov_13uzh0bhr2().s[52]++;image_result+=line+"\n";});}).catch(function(error){cov_13uzh0bhr2().f[7]++;cov_13uzh0bhr2().s[53]++;console.log(error);});//delete user file after use
cov_13uzh0bhr2().s[54]++;try{cov_13uzh0bhr2().s[55]++;fs.unlinkSync(path);}catch(error){}// send recognition result to user
cov_13uzh0bhr2().s[56]++;if(image_result){cov_13uzh0bhr2().b[8][0]++;cov_13uzh0bhr2().s[57]++;await step.context.sendActivity(image_result);}else{cov_13uzh0bhr2().b[8][1]++;cov_13uzh0bhr2().s[58]++;await step.context.sendActivity("Recognition failed, no pattern found");}}}else{cov_13uzh0bhr2().b[6][1]++;}}else{cov_13uzh0bhr2().b[4][1]++;}//If having not jumped to docDialog, go to the next step
cov_13uzh0bhr2().s[59]++;return await step.next();}/**
   * Replace the dialog with mainDialog, restart it with a restart msg.
   * @param {*} step
   * @returns {*} a non-null DialogTurnResult
   */async repeatStep(step){cov_13uzh0bhr2().f[8]++;cov_13uzh0bhr2().s[60]++;return await step.replaceDialog(this.initialDialogId,{restartMsg:"What else can I do for you?"});}/**
   * The method for performing three requests simultaneously via Axios for doc processing.
   * @param {*} path
   * @returns request results as an array
   */async sendReq(path){cov_13uzh0bhr2().f[9]++;var form1=(cov_13uzh0bhr2().s[61]++,new FormData());cov_13uzh0bhr2().s[62]++;form1.append("file",fse.createReadStream(path));var form2=(cov_13uzh0bhr2().s[63]++,new FormData());cov_13uzh0bhr2().s[64]++;form2.append("file",fse.createReadStream(path));var form3=(cov_13uzh0bhr2().s[65]++,new FormData());cov_13uzh0bhr2().s[66]++;form3.append("file",fse.createReadStream(path));let reqArr=(cov_13uzh0bhr2().s[67]++,[axios({method:"post",url:"https://textsumapi.azurewebsites.net/api/TextSummary",data:form1,headers:form1.getHeaders()}),axios({method:"post",url:"http://20.77.57.60:8000",data:form2,headers:form2.getHeaders()}),axios({method:"post",url:"https://avabotformrecog.azurewebsites.net/api/FormRecogFunction?type=Layout",data:form3,headers:form3.getHeaders()})]);var output=(cov_13uzh0bhr2().s[68]++,[]);// wait till the requests are completed
cov_13uzh0bhr2().s[69]++;await Promise.allSettled(reqArr).then(results=>{cov_13uzh0bhr2().f[10]++;cov_13uzh0bhr2().s[70]++;results.forEach(result=>{cov_13uzh0bhr2().f[11]++;cov_13uzh0bhr2().s[71]++;console.log(result.status);//if status is fulfilled, record the result, if is failed, fill with 0
cov_13uzh0bhr2().s[72]++;if(result.status=="fulfilled"){cov_13uzh0bhr2().b[9][0]++;cov_13uzh0bhr2().s[73]++;output.push(result.value.data);cov_13uzh0bhr2().s[74]++;console.log("first: "+result.value.data);}else{cov_13uzh0bhr2().b[9][1]++;cov_13uzh0bhr2().s[75]++;output.push(0);}});});cov_13uzh0bhr2().s[76]++;console.log("finished!");cov_13uzh0bhr2().s[77]++;console.log(output);cov_13uzh0bhr2().s[78]++;return output;}/**
   * The method to handle user attachment
   * @param {*} turnContext
   * @returns file path 
   */async handleIncomingAttachment(turnContext){cov_13uzh0bhr2().f[12]++;// Prepare Promises to download each attachment and then execute each Promise.
const promises=(cov_13uzh0bhr2().s[79]++,await turnContext.activity.attachments.map(this.downloadAttachmentAndWrite));const successfulSaves=(cov_13uzh0bhr2().s[80]++,await Promise.all(promises));// Replies back to the user that the file has been received.
async function replyForReceivedAttachments(localAttachmentData){cov_13uzh0bhr2().f[13]++;cov_13uzh0bhr2().s[81]++;if(localAttachmentData){cov_13uzh0bhr2().b[10][0]++;cov_13uzh0bhr2().s[82]++;// Because the TurnContext was bound to this function, the bot can call
// `TurnContext.sendActivity` via `this.sendActivity`;
await this.sendActivity(`Attachment "${localAttachmentData.fileName}" `+`has been received.`);cov_13uzh0bhr2().s[83]++;return localAttachmentData.localPath;}else{cov_13uzh0bhr2().b[10][1]++;cov_13uzh0bhr2().s[84]++;await this.sendActivity("Attachment was not successfully received.");cov_13uzh0bhr2().s[85]++;return undefined;}}// Prepare Promises to reply to the user with information about saved attachments.
// The current TurnContext is bound so `replyForReceivedAttachments` can also send replies.
const replyPromises=(cov_13uzh0bhr2().s[86]++,successfulSaves.map(replyForReceivedAttachments.bind(turnContext)));let r=(cov_13uzh0bhr2().s[87]++,await Promise.all(replyPromises).then(result=>{cov_13uzh0bhr2().f[14]++;cov_13uzh0bhr2().s[88]++;return result[0];}));cov_13uzh0bhr2().s[89]++;return r;}/**
   * The method to download user attachment to the server.
   * @param {*} attachment
   * @returns {fileName, localPath}
   */async downloadAttachmentAndWrite(attachment){cov_13uzh0bhr2().f[15]++;var name=(cov_13uzh0bhr2().s[90]++,attachment.name);// Retrieve the attachment via the attachment's contentUrl.
const url=(cov_13uzh0bhr2().s[91]++,attachment.contentUrl);// Local file path for the bot to save the attachment.
const localFileName=(cov_13uzh0bhr2().s[92]++,path.join(__dirname,name));cov_13uzh0bhr2().s[93]++;try{// arraybuffer is necessary for images
const response=(cov_13uzh0bhr2().s[94]++,await axios.get(url,{responseType:"arraybuffer"}));cov_13uzh0bhr2().s[95]++;fs.writeFile(localFileName,response.data,fsError=>{cov_13uzh0bhr2().f[16]++;cov_13uzh0bhr2().s[96]++;if(fsError){cov_13uzh0bhr2().b[11][0]++;cov_13uzh0bhr2().s[97]++;throw fsError;}else{cov_13uzh0bhr2().b[11][1]++;}});}catch(error){cov_13uzh0bhr2().s[98]++;console.error(error);cov_13uzh0bhr2().s[99]++;return undefined;}// If no error was thrown while writing to disk, return the attachment's name
// and localFilePath for the response back to the user.
cov_13uzh0bhr2().s[100]++;return{fileName:name,localPath:localFileName};}/**
   * The method to validate if the attachment type is acceptable
   * @param {*} promptContext
   * @returns boolean
   */async promptValidator(promptContext){cov_13uzh0bhr2().f[17]++;cov_13uzh0bhr2().s[101]++;if(promptContext.recognized.succeeded){cov_13uzh0bhr2().b[12][0]++;var docType=(cov_13uzh0bhr2().s[102]++,promptContext.options.prompt);var attachments=(cov_13uzh0bhr2().s[103]++,promptContext.recognized.value);var validDoc=(cov_13uzh0bhr2().s[104]++,[]);cov_13uzh0bhr2().s[105]++;attachments.forEach(attachment=>{cov_13uzh0bhr2().f[18]++;cov_13uzh0bhr2().s[106]++;if((cov_13uzh0bhr2().b[14][0]++,docType==="Please attach a document in pdf.")&&(cov_13uzh0bhr2().b[14][1]++,attachment.contentType==="application/pdf")){cov_13uzh0bhr2().b[13][0]++;cov_13uzh0bhr2().s[107]++;validDoc.push(attachment);}else{cov_13uzh0bhr2().b[13][1]++;cov_13uzh0bhr2().s[108]++;if((cov_13uzh0bhr2().b[16][0]++,docType==="Please attach an image.")&&((cov_13uzh0bhr2().b[16][1]++,attachment.contentType==="image/jpeg")||(cov_13uzh0bhr2().b[16][2]++,attachment.contentType==="image/png"))){cov_13uzh0bhr2().b[15][0]++;cov_13uzh0bhr2().s[109]++;validDoc.push(attachment);}else{cov_13uzh0bhr2().b[15][1]++;}}});cov_13uzh0bhr2().s[110]++;promptContext.recognized.value=validDoc;// If none of the attachments are valid, the retry prompt should be sent.
cov_13uzh0bhr2().s[111]++;return!!validDoc.length;}else{cov_13uzh0bhr2().b[12][1]++;cov_13uzh0bhr2().s[112]++;await promptContext.context.sendActivity("No attachments received.");// We can return true from a validator function even if Recognized.Succeeded is false.
cov_13uzh0bhr2().s[113]++;return true;}}}cov_13uzh0bhr2().s[114]++;module.exports.MainDialog=MainDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,