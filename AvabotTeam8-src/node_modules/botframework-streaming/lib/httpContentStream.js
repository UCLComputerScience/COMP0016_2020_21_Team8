"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protocol_base_1 = require("./utilities/protocol-base");
/**
 * An attachment contained within a StreamingRequest's stream collection,
 * which itself contains any form of media item.
 */
class HttpContentStream {
    /**
     * Initializes a new instance of the [HttpContentStream](xref:botframework-streaming.HttpContentStream) class.
     * @param content The [HttpContent](xref:botframework-streaming.HttpContent) to assign to the [HttpContentStream](xref:botframework-streaming.HttpContentStream).
     */
    constructor(content) {
        this.id = protocol_base_1.generateGuid();
        this.content = content;
        this.description = {
            id: this.id,
            type: this.content.headers ? this.content.headers.type : 'unknown',
            length: this.content.headers ? this.content.headers.contentLength : 0,
        };
    }
}
exports.HttpContentStream = HttpContentStream;
/**
 * The HttpContent class that contains a [SubscribableStream](xref:botframework-streaming.SubscribableStream).
 */
class HttpContent {
    /**
     * Initializes a new instance of the [HttpContent](xref:botframework-streaming.HttpContent) class.
     * @param headers The Streaming Http content header definition.
     * @param stream The stream of buffered data.
     */
    constructor(headers, stream) {
        this.headers = headers;
        this.stream = stream;
    }
    /**
     * Gets the data contained within this [HttpContent](xref:botframework-streaming.HttpContent).
     */
    getStream() {
        return this.stream;
    }
}
exports.HttpContent = HttpContent;
//# sourceMappingURL=httpContentStream.js.map